<?xml version="1.0"?>

<layer-spec xmlns="urn:jboss:galleon:layer-spec:1.0" name="postgresql-datasource">
    <dependencies>
        <layer name="postgresql-driver" />
        <layer name="postgresql-default-datasource" />
    </dependencies>

    <feature spec="subsystem.datasources.data-source">
        <!-- TODO: disable use-ccm to safe performance-->
        <param name="use-ccm" value="true" />
        <!-- we can't use expression for pool-name (data-source name) hard coding should be fine, the important thing is JNDI -->
        <param name="data-source" value="PostgreSQLDS" />
        <param name="enabled" value="${org.wildfly.datasources.postgresql.enabled, env.POSTGRESQL_ENABLED:true}" />
        <param name="exception-sorter-class-name" value="${org.wildfly.datasources.postgresql.exception-sorter-class-name, env.POSTGRESQL_EXCEPTION_SORTER:org.jboss.jca.adapters.jdbc.extensions.postgres.PostgreSQLExceptionSorter}" />
        <param name="use-java-context" value="true" />
        <param name="jndi-name" value="${org.wildfly.datasources.postgresql.jndi-name,env.POSTGRESQL_JNDI:java:jboss/datasources/${org.wildfly.datasources.postgresql.datasource, env.POSTGRESQL_DATASOURCE:PostgreSQLDS}}" />
        <param name="jta" value="${org.wildfly.datasources.postgresql.jta,env.POSTGRESQL_JTA:true}" />
        <param name="max-pool-size" value="${org.wildfly.datasources.postgresql.max-pool-size,env.POSTGRESQL_MAX_POOL_SIZE:20}" />
        <param name="min-pool-size" value="${org.wildfly.datasources.postgresql.min-pool-size,env.POSTGRESQL_MIN_POOL_SIZE:0}" />
        <param name="connection-url" value="${org.wildfly.datasources.postgresql.connection-url,env.POSTGRES_CONNECTION,env.POSTGRESQL_URL:jdbc:postgresql://${org.wildfly.datasources.postgresql.host,env.POSTGRESQL_HOST:localhost}:${org.wildfly.datasources.postgresql.port,env.POSTGRESQL_PORT:5432}/${org.wildfly.datasources.postgresql.database,env.POSTGRESQL_DATABASE}}" />
        <param name="driver-name" value="${env.POSTGRES_DRIVER:postgresql}" />
        <param name="user-name" value="${org.wildfly.datasources.postgresql.user-name,env.POSTGRES_USER,env.POSTGRESQL_USER:postgres}" />
        <param name="password" value="${org.wildfly.datasources.postgresql.password,env.POSTGRES_PASSWORD,env.POSTGRESQL_PASSWORD:postgres}" />
        <param name="validate-on-match" value="${org.wildfly.datasources.postgresql.validate-on-match,env.POSTGRESQL_VALIDATE_ON_MATCH:true}" />
        <param name="check-valid-connection-sql" value="SELECT 1" />
        <param name="background-validation" value="${org.wildfly.datasources.postgresql.background-validation,env.POSTGRESQL_BACKGROUND_VALIDATION:false}" />
        <param name="background-validation-millis" value="${org.wildfly.datasources.postgresql.background-validation-millis,env.POSTGRESQL_BACKGROUND_VALIDATION_MILLIS:10000}" />
        <param name="flush-strategy" value="${org.wildfly.datasources.postgresql.flush-strategy,env.POSTGRESQL_FLUSH_STRATEGY:FailingConnectionOnly}" />
        <!-- <param name="flush-strategy" value="IdleConnections" /> -->
        <param name="statistics-enabled" value="${wildfly.datasources.statistics-enabled:${wildfly.statistics-enabled:false}}" />
        <param name="stale-connection-checker-class-name" value="${org.wildfly.datasources.postgresql.stale-connection-checker-class-name,env.POSTGRESQL_STALE_CONNECTION_CHECKER:org.jboss.jca.adapters.jdbc.extensions.novendor.NullStaleConnectionChecker}" />
        <param name="valid-connection-checker-class-name" value="${org.wildfly.datasources.postgresql.valid-connection-checker-class-name,env.POSTGRESQL_CONNECTION_CHECKER:org.jboss.jca.adapters.jdbc.extensions.postgres.PostgreSQLValidConnectionChecker}" />
        <param name="transaction-isolation" value="${org.wildfly.datasources.postgresql.transaction-isolation,env.POSTGRESQL_TX_ISOLATION:TRANSACTION_READ_COMMITTED}" />
    </feature>
</layer-spec>