<?xml version="1.0" encoding="UTF-8"?>
<!-- JBoss, Home of Professional Open Source Copyright 2015, Red Hat, Inc. 
	and/or its affiliates, and individual contributors by the @authors tag. See 
	the copyright.txt in the distribution for a full listing of individual contributors. 
	Licensed under the Apache License, Version 2.0 (the "License"); you may not 
	use this file except in compliance with the License. You may obtain a copy 
	of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required 
	by applicable law or agreed to in writing, software distributed under the 
	License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS 
	OF ANY KIND, either express or implied. See the License for the specific 
	language governing permissions and limitations under the License. -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>me.andidroid</groupId>
		<artifactId>test</artifactId>
		<version>1.0.1</version>
	</parent>
	<artifactId>test-feature-pack-parent</artifactId>
	<version>0.28.0-SNAPSHOT</version>
	<packaging>pom</packaging>
	<name>WildFly Featurepack</name>

	<description>WildFly Featurepack</description>

	<url>https://github.com/andidroid/test-feature-pack</url>

	<licenses>
		<license>
			<name>Do What The F*ck You Want To Public License</name>
			<url>http://www.wtfpl.net/txt/copying/</url>
			<distribution>repo</distribution>
			<comments>The Do What The Fuck You Want To Public License (WTFPL) is a free software license.</comments>
		</license>
	</licenses>

	<scm>
		<connection>scm:git:https://github.com/andidroid/test-feature-pack.git</connection>
		<developerConnection>scm:git:https://github.com/andidroid/test-feature-pack.git</developerConnection>
		<url>https://github.com/andidroid/test-feature-pack.git</url>
		<tag>HEAD</tag>
	</scm>

	<distributionManagement>
		<repository>
			<id>github</id>
			<name>GitHub andidroid Apache Maven Packages</name>
			<url>https://maven.pkg.github.com/andidroid/test-feature-pack</url>
		</repository>
		<snapshotRepository>
			<id>github</id>
			<name>GitHub andidroid Apache Maven Packages</name>
			<url>https://maven.pkg.github.com/andidroid/test-feature-pack</url>
		</snapshotRepository>
		<site>
			<id>github</id>
			<name>GitHub andidroid Apache Maven Packages</name>
			<url>scm:git:https://github.com/andidroid/test-feature-pack.git</url>
		</site>
	</distributionManagement>

	<!-- External non standard repositories -->
	<repositories>
		<repository>
			<id>central</id>
			<name>Maven Central</name>
			<layout>default</layout>
			<url>https://repo1.maven.org/maven2</url>
		</repository>
		<repository>
			<id>github</id>
			<url>https://maven.pkg.github.com/andidroid/test</url>
		</repository>
		<repository>
			<id>JBossEA</id>
			<url>https://repository.jboss.org/nexus/content/repositories/ea/</url>
		</repository>

	</repositories>

	<properties>
		<enforcer.skip>true</enforcer.skip>
		<java.version>17</java.version>
		<javaee.version>10.0.0</javaee.version>
		<microprofile.version>6.0</microprofile.version>

		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<maven.compiler.source>${java.version}</maven.compiler.source>
		<maven.compiler.target>${java.version}</maven.compiler.target>

		<!-- api dependency versions -->
		<jcache.version>1.1.1</jcache.version>
		<slf4j.version>2.0.7</slf4j.version>

		<!-- implementation dependency versions -->
		<log4j.version>2.20.0</log4j.version>
		<wildfly.version>28.0.0.Beta1</wildfly.version>
		<postgres.version>42.6.0</postgres.version>
		<artemis.version>2.28.0</artemis.version>
		
		<hibernate.version>6.2.1.Final</hibernate.version>
		<hibernate.search.version>6.1.8.Final</hibernate.search.version>
		<hibernate.validator.version>8.0.0.Final</hibernate.validator.version>
		<resteasy.version>6.2.3.Final</resteasy.version>
		<infinispan.version>14.0.8.Final</infinispan.version>
		<kafka.version>3.4.0</kafka.version>
		<rocksdbjni.version>7.1.2</rocksdbjni.version>
		<jackson.version>2.14.2</jackson.version>
		<jaxb-runtime.version>4.0.2</jaxb-runtime.version>

		<jts.version>1.19.0</jts.version>

		<javaee.mvc.version>2.1.0</javaee.mvc.version>
		<krazo.version>3.0.0</krazo.version>

		<smallrye-config.version>3.1.3</smallrye-config.version>
		<opentracing-jms.version>0.1.11</opentracing-jms.version>
		<opentelemetry.version>1.20.0</opentelemetry.version>

		<galleon.version>5.1.0.Final</galleon.version>
		<wildfly-galleon-plugin.version>6.4.1.Final</wildfly-galleon-plugin.version>

		<wildfly-reactive-feature-pack.version>3.0.0.Final</wildfly-reactive-feature-pack.version>
		<netty.version>4.1.87.Final</netty.version>
		<netty.tcnative.version>2.0.59.Final</netty.tcnative.version>

	</properties>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.wildfly</groupId>
				<artifactId>wildfly-galleon-pack</artifactId>
				<!--
				<artifactId>wildfly-preview-feature-pack</artifactId>
				-->
				<version>${wildfly.version}</version>
				<type>zip</type>
			</dependency>
			<dependency>
				<groupId>org.wildfly</groupId>
				<artifactId>wildfly-ee-galleon-pack</artifactId>
				<version>${wildfly.version}</version>
				<type>zip</type>
			</dependency>
			<dependency>
				<groupId>org.wildfly.extras.reactive</groupId>
				<artifactId>wildfly-microprofile-reactive-feature-pack</artifactId>
				<version>${wildfly-reactive-feature-pack.version}</version>
				<type>zip</type>
			</dependency>
			<dependency>
				<groupId>org.postgresql</groupId>
				<artifactId>postgresql</artifactId>
				<version>${postgres.version}</version>
			</dependency>

			<dependency>
				<groupId>io.opentelemetry.instrumentation</groupId>
				<artifactId>opentelemetry-jdbc</artifactId>
				<version>${opentelemetry.version}-alpha</version>
			</dependency>

			<dependency>
				<groupId>javax.cache</groupId>
				<artifactId>cache-api</artifactId>
				<version>${jcache.version}</version>
			</dependency>
			<dependency>
				<groupId>org.hibernate.orm</groupId>
				<artifactId>hibernate-spatial</artifactId>
				<version>${hibernate.version}</version>
			</dependency>
			<dependency>
				<groupId>org.infinispan</groupId>
				<artifactId>infinispan-jcache</artifactId>
				<version>${infinispan.version}</version>
			</dependency>
			<dependency>
				<groupId>org.infinispan</groupId>
				<artifactId>infinispan-jcache-remote</artifactId>
				<version>${infinispan.version}</version>
			</dependency>

			<dependency>
				<groupId>org.locationtech.jts</groupId>
				<artifactId>jts-core</artifactId>
				<version>${jts.version}</version>
			</dependency>
			<dependency>
				<groupId>com.graphhopper.external</groupId>
				<artifactId>jackson-datatype-jts</artifactId>
				<version>2.14</version>
			</dependency>


			<dependency>
				<groupId>org.apache.kafka</groupId>
				<artifactId>kafka-streams</artifactId>
				<version>${kafka.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.kafka</groupId>
				<artifactId>connect-api</artifactId>
				<version>${kafka.version}</version>
			</dependency>
			<!-- https://mvnrepository.com/artifact/org.apache.kafka/connect-json -->
			<dependency>
				<groupId>org.apache.kafka</groupId>
				<artifactId>connect-json</artifactId>
				<version>${kafka.version}</version>
			</dependency>
			<dependency>
				<groupId>org.rocksdb</groupId>
				<artifactId>rocksdbjni</artifactId>
				<version>${rocksdbjni.version}</version>
			</dependency>
			<dependency>
				<groupId>io.smallrye.config</groupId>
				<artifactId>smallrye-config-core</artifactId>
				<version>${smallrye-config.version}</version>
			</dependency>
			<!-- https://mvnrepository.com/artifact/io.smallrye.config/smallrye-config-events -->
			<dependency>
				<groupId>io.smallrye.config</groupId>
				<artifactId>smallrye-config-events</artifactId>
				<version>${smallrye-config.version}</version>
			</dependency>




			<dependency>
				<groupId>io.opentelemetry.instrumentation</groupId>
				<artifactId>opentelemetry-kafka-clients-common</artifactId>
				<version>${opentelemetry.version}-alpha</version>
			</dependency>
			<dependency>
				<groupId>io.opentelemetry.instrumentation</groupId>
				<artifactId>opentelemetry-kafka-clients-2.6</artifactId>
				<version>${opentelemetry.version}-alpha</version>
			</dependency>


			<dependency>
				<groupId>io.opentelemetry.javaagent.instrumentation</groupId>
				<artifactId>opentelemetry-javaagent-jms-3.0</artifactId>
				<version>1.25.0-alpha</version>
			</dependency>
			<dependency>
				<groupId>io.opentelemetry.javaagent.instrumentation</groupId>
				<artifactId>opentelemetry-javaagent-jms-common</artifactId>
				<version>1.25.0-alpha</version>
			</dependency>

			<dependency>
				<groupId>io.netty</groupId>
				<artifactId>netty-tcnative</artifactId>
				<version>${netty.tcnative.version}</version>
			</dependency>
			<dependency>
				<groupId>io.netty</groupId>
				<artifactId>netty-tcnative-classes</artifactId>
				<version>${netty.tcnative.version}</version>
			</dependency>
			<dependency>
				<groupId>io.netty</groupId>
				<artifactId>netty-tcnative-boringssl-static</artifactId>
				<version>${netty.tcnative.version}</version>
			</dependency>
			<dependency>
				<groupId>io.netty</groupId>
				<artifactId>netty-tcnative-boringssl-static</artifactId>
				<version>${netty.tcnative.version}</version>
				<classifier>windows-x86_64</classifier>
			</dependency>
			<dependency>
				<groupId>io.netty</groupId>
				<artifactId>netty-handler</artifactId>
			<version>${netty.version}</version>
		</dependency>
		</dependencies>
	</dependencyManagement>
	<dependencies>
		<!-- <dependency>
			<groupId>org.wildfly</groupId>
<artifactId>wildfly-preview-feature-pack</artifactId>
			<version>${wildfly.version}</version>
			<type>zip</type>
		</dependency> -->

<!-- 
		<dependency>
			<groupId>io.opentracing</groupId>
			<artifactId>opentracing-util</artifactId>
			<version>0.33.0</version>
		</dependency>

		<dependency>
			<groupId>io.opentracing.contrib</groupId>
			<artifactId>common</artifactId>
			<version>0.1.4</version>
		</dependency>
		<dependency>
			<groupId>io.opentracing.contrib</groupId>
			<artifactId>opentracing-jdbc</artifactId>
			<version>0.2.15</version>
		</dependency>
		<dependency>
			<groupId>io.opentracing.contrib</groupId>
			<artifactId>opentracing-jms-2</artifactId>
			<version>${opentracing-jms.version}</version>
		</dependency>
		<dependency>
			<groupId>io.opentracing.contrib</groupId>
			<artifactId>opentracing-jms-common</artifactId>
			<version>${opentracing-jms.version}</version>
		</dependency> -->

		<!-- https://mvnrepository.com/artifact/io.opentracing.contrib/opentracing-kafka-client -->
		<!-- <dependency>
			<groupId>io.opentracing.contrib</groupId>
			<artifactId>opentracing-kafka-client</artifactId>
			<version>0.1.15</version>
		</dependency>
		<dependency>
			<groupId>io.opentracing.contrib</groupId>
			<artifactId>opentracing-kafka-streams</artifactId>
			<version>0.1.15</version>
		</dependency> -->

		<!-- <dependency> <groupId>${project.groupId}</groupId> <artifactId>config</artifactId> 
			<version>${project.version}</version> </dependency> -->

	
	</dependencies>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.jboss.galleon</groupId>
					<artifactId>galleon-maven-plugin</artifactId>
					<version>${galleon.version}</version>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<configuration>
					<tagNameFormat>v@{project.version}</tagNameFormat>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<modules>
		<module>config</module>
		<module>activemq-artemis-opentelemetry-plugin</module>
		<module>test-feature-pack</module>
	</modules>
</project>
